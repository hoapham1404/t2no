name: Wails Build

"on":
  push: { branches: ["main"] }

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'App'
            platform:  'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'App'
            platform:  'windows/amd64'
            os: 'windows-latest'
          - name: 'App'
            platform:  'darwin/universal'
            os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build Angular frontend
        run: |
          cd frontend
          npm run build

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libglib2.0-dev \
            libgdk-pixbuf2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            pkg-config

      - name: Install Wails CLI
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          echo "${{ github.workspace }}/go/bin" >> $GITHUB_PATH

      - name: Build Wails app (Linux)
        if: matrix.build.platform == 'linux/amd64'
        run: |
          wails build -platform linux/amd64 -tags webkit2_41

      - name: Build Wails app (Non-Linux)
        if: matrix.build.platform != 'linux/amd64'
        run: |
          wails build -platform ${{ matrix.build.platform }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binary
          path: ./build/bin/**  # Update this to your actual output path

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Upload release binaries
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./build/bin/**
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
